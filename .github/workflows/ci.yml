name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - '[0-9]+.x'
    tags:
      - '*'
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  ci:
    name: Node ${{ matrix.node_version }} - On ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 16.x
          cache: 'npm'

      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Deps
        run: npm ci
          

      - name: Lint
        run: |
          npm run lint
          npm run format:check

      - name: Test
        run: |
          npm run test:ci
      - name: build
        run: |
          npm run build
          npm run post-build
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: dist/
          retention-days: 5
  

      
  


  infrastructure:
    name: create infra using terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_PUB_KEY: ${{secrets.PUB_KEY}}
    
    outputs:
      ip: ${{steps.ip_address.outputs.ip}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
       
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Init
        run:  terraform  -chdir=terraform init
      
     
      
      - name: Terraform Apply
        run: terraform -chdir=terraform apply --auto-approve 
      - name : get address
        id : ip_address
        run : |
          terraform-bin -chdir=terraform output  -raw ec2_ip   >> ip.txt

          echo "ip=$(cat ip.txt)" >> "$GITHUB_OUTPUT"
      - name : test
        run: | 
          echo ${{steps.ip.outputs.ip}}
          echo  ${{ needs.infrastructure.outputs.ip }}   
      
  deploy :
    name : deploy to production server 
    needs : [ infrastructure , ci ]  
    runs-on:  ubuntu-latest 
    
    
    steps : 
      - name: 'download Artifact'
        uses: actions/download-artifact@v4
        with:
          name: website
          path: dist/
      

      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host:  ${{needs.infrastructure.outputs.ip}}
          username: ec2-user
          port: 22
          key: ${{ secrets.PRI_KEY }}
          source: "dist/"
          target: "~/app"
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ needs.infrastructure.outputs.ip }}
          username: ec2-user
          key: ${{ secrets.PRI_KEY}}
          port: 22
          script: |
            sudo yum install -y nodejs
            sudo npm install pm2@latest -g
            sudo pm2 startup
            cd app/dist/
            npm install 
            sudo PORT=80 pm2 start "node main.js" 
             